name: Compile and bundle

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  _: # man this workflow already has a name. I don't need two names for one thing
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        include:
        - os: windows-latest
          LIBRARY_FILENAME: backend.dll
          PYMODULE_FILENAME: backend.pyd
        - os: ubuntu-latest
          LIBRARY_FILENAME: libbackend.so
          PYMODULE_FILENAME: backend.so
    runs-on: ${{ matrix.os }}
  
    steps:
    
    # Setup
    
    - uses: actions/checkout@v2
    
    - name: Setup Rust
      uses: hecrj/setup-rust-action@v1
      with:
        rust-version: stable
    
    - name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r frontend/requirements.txt
    
    - name: Display Python version
      run: python -c "import sys; print(sys.version)"
    
    - name: Build backend
      run: cargo build --release
      working-directory: ./backend
    
    - name: Rename Python module file extension and move
      run: mv backend/target/release/${{matrix.LIBRARY_FILENAME}} ${{matrix.PYMODULE_FILENAME}}
    
    - name: Strip library
      if: startsWith(matrix.os, 'ubuntu')
      run: strip ${{matrix.PYMODULE_FILENAME}}
    
    # Bundled exe
    
    - name: Make backend module accessible to frontend
      run: cp ${{matrix.PYMODULE_FILENAME}} frontend/${{matrix.PYMODULE_FILENAME}}
    
    - name: Bundle exe
      if: startsWith(matrix.os, 'windows')
      run: .\bundle.bat
    
    # Upload
    
    - name: Upload bundled exe
      uses: actions/upload-artifact@v2
      if: startsWith(matrix.os, 'windows')
      with:
        name: Bundled exe
        path: etternagraph.exe
    
    - name: Upload compiled module
      uses: actions/upload-artifact@v2
      with:
        name: Backend module
        path: ${{matrix.PYMODULE_FILENAME}}
